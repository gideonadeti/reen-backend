// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.2
//   protoc               v3.21.12
// source: payment.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "payment";

export interface CheckoutRequest {
  userId: string;
}

export interface CheckoutResponse {
  stripeSessionUrl: string;
}

export interface HandleSuccessfulCheckoutRequest {
  session: Session | undefined;
}

export interface Session {
  metadata: Metadata | undefined;
  amountTotal: number;
}

export interface Metadata {
  userId: string;
}

export interface HandleSuccessfulCheckoutResponse {
}

export const PAYMENT_PACKAGE_NAME = "payment";

export interface PaymentServiceClient {
  checkout(request: CheckoutRequest): Observable<CheckoutResponse>;

  handleSuccessfulCheckout(request: HandleSuccessfulCheckoutRequest): Observable<HandleSuccessfulCheckoutResponse>;
}

export interface PaymentServiceController {
  checkout(request: CheckoutRequest): Promise<CheckoutResponse> | Observable<CheckoutResponse> | CheckoutResponse;

  handleSuccessfulCheckout(
    request: HandleSuccessfulCheckoutRequest,
  ):
    | Promise<HandleSuccessfulCheckoutResponse>
    | Observable<HandleSuccessfulCheckoutResponse>
    | HandleSuccessfulCheckoutResponse;
}

export function PaymentServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["checkout", "handleSuccessfulCheckout"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("PaymentService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("PaymentService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PAYMENT_SERVICE_NAME = "PaymentService";
